#include<stdio.h>
#include<conio.h>
#include<graphics.h>
#include<math.h>
void translation(float solution[][3],float a[][3],int n,int tx,int ty);
void drawPolygon(float a[][3],int n);
void multiplication(float solution[][3],float a[][3],float b[][3],int l,int m,int n);

void main()
{
	int graphics_driver=DETECT,graphics_mode;
	int n,i,tx,ty,choice,theta;
	float a[20][3],solution[20][3]={0},scale[3][3]={0},rotation[3][3]={0},sx,sy;
	clrscr();
	initgraph(&graphics_driver,&graphics_mode,"C:\\TC\\BGI");
	printf("Eneter no. of vertices of polygon : ");
	scanf("%d",&n);
	printf("Enter vertices : \n");
	for(i=0;i<n;i++)
	{
		printf("X%d,Y%d : ",i+1,i+1);
		scanf("%f%f",&a[i][0],&a[i][1]);
		a[i][2]=1;
	}

	printf("\n1.Translation\n2.Scaling\n3.Rotation\n");
	printf("Enter choice : ");
	scanf("%d",&choice);

	cleardevice();
	outtextxy(10,10,"BEFORE TRANSFORMATION : ");
	drawPolygon(a,n);
	getch();
	cleardevice();
	switch(choice)
	{
		case 1:	printf("Enter translation factor along x and y axis : ");
			scanf("%d%d",&tx,&ty);
			translation(solution,a,n,tx,ty);
			drawPolygon(solution,n);

			break;
		case 2:	printf("Enter x scaling factor along x and y axis : ");
			scanf("%f%f",&sx,&sy);
			scale[0][0]=sx;
			scale[1][1]=sy;
			scale[2][2]=1;
			multiplication(solution,a,scale,n,3,3);
			drawPolygon(solution,n);
			break;
		case 3:	printf("Enter angle of rotation in degree : ");
			scanf("%d",&theta);
			printf("Enter point of rotation : ");
			scanf("%d%d",&tx,&ty);
			rotation[0][0]=rotation[1][1]=cos(theta*3.14159/180);
			rotation[0][1]=sin(theta*3.14159/180);
			rotation[1][0]=-rotation[0][1];
			rotation[2][2]=1;
			translation(a,a,n,-tx,-ty);
			multiplication(solution,a,rotation,n,3,3);
			translation(solution,solution,n,tx,ty);
			drawPolygon(solution,n);
			break;
		default:
			printf("Invalid Choice! ");
	}
	getch();

	closegraph();
}

void drawPolygon(float a[][3],int n)
{

	int i;
	a[n][0]=a[0][0];
	a[n][1]=a[0][1];
	for(i=0;i<n;i++)
	{
		line(a[i][0],a[i][1],a[i+1][0],a[i+1][1]);
	}
	getch();
}

void translation(float solution[][3],float a[][3],int n,int tx,int ty)
{
	int i;
	for(i=0;i<n;i++)
	{
		solution[i][0]=a[i][0]+tx;
		solution[i][1]=a[i][1]+ty;
		solution[i][2]=1;
	}
}

void multiplication(float solution[][3],float a[][3],float b[][3],int l,int m,int n)
{
	int i,j,k;
	for(i=0;i<l;i++)
	{
		for(j=0;j<n;j++)
		{
			solution[i][j]=0;
			for(k=0;k<m;k++)
			{
				solution[i][j]+=a[i][k]*b[k][j];
			}
		}
	}
}